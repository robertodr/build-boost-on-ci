version: 'build-{build}-{branch}'

platform: x64

build:
  parallel: true

image:
  - Previous Visual Studio 2017

environment:
  # Create expected SHELL variable for pipenv.
  SHELL: 'windows'
  CTEST_OUTPUT_ON_FAILURE: '1'
  matrix:
    - CMAKE_GENERATOR: 'Visual Studio 15 2017 Win64'
      BUILDFLAGS: '/verbosity:normal'
      TESTTARGET: 'RUN_TESTS'
      CMAKEARGS: ''
    - CMAKE_GENERATOR: 'MSYS Makefiles'
      BUILDFLAGS: 'VERBOSE=1'
      TESTTARGET: 'test'
      CMAKEARGS: '-DBoost_USE_STATIC_LIBS=ON -DBoost_USE_MULTITHREADED=ON -DBoost_USE_STATIC_RUNTIME=ON -DCMAKE_CXX_FLAGS="-D_hypot=hypot"'

matrix:
  fast_finish: true

init:
  - set PATH=C:\msys64\MINGW64\bin;C:\msys64\usr\bin;%PATH%
  - set PATH=C:\Python37-x64;C:\Python37-x64\Scripts;%PATH%
  # Remove Python 2.7 from path
  - set PATH=%PATH:C:\Python27;=%
  - set PATH=%PATH:C:\Python27\Scripts;=%

cache:
  - c:\tools\vcpkg\installed\ -> testing\dependencies\appveyor\install.bat
  - c:\msys64\var\cache\pacman\pkg -> testing\dependencies\appveyor\install.bat
  - c:\Deps\boost_1_67_0 -> testing\dependencies\appveyor\boost.bat

install:
  - python -m pip install pipenv
  - '%APPVEYOR_BUILD_FOLDER%\testing\dependencies\appveyor\install.bat'
  - '%APPVEYOR_BUILD_FOLDER%\testing\dependencies\appveyor\boost.bat'
  - pipenv install --three

# extract step has to happen before the sh.exe workaround otherwise 7z will complain
before_build:
  - pipenv run python --version
  - cmake --version

# the pipenv lock was added as workaround for pipenv complaining about wrong checksum
# after upgrade to Python 3.7 on Appveyor
build_script:
  - cmake --version
  #- pipenv run cmake -H. -Bbuild -G"%CMAKE_GENERATOR%" %CMAKEARGS%
  #- pipenv run cmake --build build --config Release
  #- pipenv run cmake --build build --target %TESTTARGET% --config Release

deploy: off
